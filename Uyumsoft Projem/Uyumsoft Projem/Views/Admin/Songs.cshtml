@model List<Song>
@{
    ViewData["Title"] = "Song Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .song-card {
            transition: transform 0.2s;
        }
        .song-card:hover {
            transform: translateY(-2px);
        }
        .song-thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
        }
        .artist-badge {
            font-size: 0.75rem;
        }
    </style>
}

<div class="container-fluid py-5">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Song Management</h1>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fa fa-arrow-left me-2"></i>Back to Dashboard
                </a>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Search songs by title or artist...">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="fa fa-search"></i>
                </button>
            </div>
        </div>
        <div class="col-md-6">
            <select id="genreFilter" class="form-select">
                <option value="">All Genres</option>
                @foreach (var genre in Model.Select(s => s.Genre).Distinct().Where(g => !string.IsNullOrEmpty(g)))
                {
                    <option value="@genre">@genre</option>
                }
            </select>
        </div>
    </div>

    <!-- Songs Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">All Songs (@Model.Count)</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="songsTable">
                            <thead>
                                <tr>
                                    <th>Cover</th>
                                    <th>Title</th>
                                    <th>Artist(s)</th>
                                    <th>Genre</th>
                                    <th>Price</th>
                                    <th>Plays</th>
                                    <th>Upload Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var song in Model)
                                {
                                    <tr data-song-id="@song.SongId" data-title="@song.Title" data-genre="@song.Genre">
                                        <td>
                                            <img src="@song.ImagePath" alt="@song.Title" class="song-thumbnail">
                                        </td>
                                        <td>
                                            <strong>@song.Title</strong>
                                        </td>
                                        <td>
                                            @if (song.Artists.Any())
                                            {
                                                @foreach (var artist in song.Artists)
                                                {
                                                    <span class="badge bg-secondary artist-badge me-1">@artist.UserName</span>
                                                }
                                            }
                                            else
                                            {
                                                <span class="text-muted">No artist</span>
                                            }
                                        </td>
                                        <td>@song.Genre</td>
                                        <td><strong>$@song.Price</strong></td>
                                        <td>
                                            <span class="badge bg-info">@(song.ClickTimes ?? 0)</span>
                                        </td>
                                        <td>@(song.UploadDate?.ToString("MM/dd/yyyy") ?? "Unknown")</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button class="btn btn-outline-danger" 
                                                        onclick="confirmDeleteSong('@song.SongId', '@song.Title')">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                                <a href="/Song/SongDetails?id=@song.SongId" 
                                                   class="btn btn-outline-info" target="_blank">
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    @if (!Model.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fa fa-music fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No songs found</h5>
                            <p class="text-muted">There are no songs in the system yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteSongModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Song Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the song <strong id="deleteSongTitle"></strong>?</p>
                <div class="alert alert-danger">
                    <strong>Warning:</strong> This action will:
                    <ul class="mb-0 mt-2">
                        <li>Permanently delete the song and its files</li>
                        <li>Remove it from all user libraries</li>
                        <li>Remove it from all playlists</li>
                        <li>Cannot be undone</li>
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteSongBtn">Delete Song</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                var searchText = $(this).val().toLowerCase();
                filterTable();
            });
            
            // Genre filter
            $('#genreFilter').on('change', function() {
                filterTable();
            });
            
            function filterTable() {
                var searchText = $('#searchInput').val().toLowerCase();
                var selectedGenre = $('#genreFilter').val();
                
                $('#songsTable tbody tr').each(function() {
                    var title = $(this).data('title').toLowerCase();
                    var genre = $(this).data('genre');
                    var artistText = $(this).find('td:nth-child(3)').text().toLowerCase();
                    
                    var matchesSearch = title.includes(searchText) || artistText.includes(searchText);
                    var matchesGenre = selectedGenre === '' || genre === selectedGenre;
                    
                    if (matchesSearch && matchesGenre) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }
        });
        
        function confirmDeleteSong(songId, songTitle) {
            document.getElementById('deleteSongTitle').textContent = songTitle;
            
            document.getElementById('confirmDeleteSongBtn').onclick = function() {
                $.ajax({
                    url: '/Admin/DeleteSong',
                    type: 'POST',
                    data: { songId: songId },
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while deleting the song.');
                    }
                });
                
                var modal = bootstrap.Modal.getInstance(document.getElementById('deleteSongModal'));
                modal.hide();
            };
            
            new bootstrap.Modal(document.getElementById('deleteSongModal')).show();
        }
    </script>
}
